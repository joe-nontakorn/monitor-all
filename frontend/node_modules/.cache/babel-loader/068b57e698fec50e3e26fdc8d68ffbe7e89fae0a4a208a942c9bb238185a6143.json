{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\NontakornKhanaphol\\\\Documents\\\\Nontakorn-joe\\\\Dev\\\\test-frontend\\\\src\\\\components\\\\monitor2.js\",\n  _s = $RefreshSig$();\n/* eslint-disable no-unused-vars */\n\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport \"../assets/monitor2.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [sensorData, setSensorData] = useState([]);\n  const [HYIData, setHYIData] = useState([]); // เพิ่ม state สำหรับข้อมูลจาก HYI\n  const [temp30Data, settemp30Data] = useState([]);\n  const [allSensorNames, setAllSensorNames] = useState([]);\n  useEffect(() => {\n    axios.get(\"http://localhost:3100/api/v1/monitor2\").then(response => {\n      setSensorData(response.data.data);\n    }).catch(error => {\n      console.error(\"Error fetching monitor2 data:\", error);\n    });\n    axios.get(\"http://localhost:3100/api/v1/HYI\").then(response => {\n      setHYIData(response.data.data); // บันทึกข้อมูลจาก HYI\n    }).catch(error => {\n      console.error(\"Error fetching HYI data:\", error);\n    });\n    axios.get(\"http://localhost:3100/api/v1/temp30\").then(response => {\n      settemp30Data(response.data.data); // บันทึกข้อมูลจาก temp30\n    }).catch(error => {\n      console.error(\"Error fetching HYI data:\", error);\n    });\n  }, []);\n  useEffect(() => {\n    const names = [];\n    sensorData.forEach(locationData => {\n      locationData.BinaryInSet.forEach(binaryInput => {\n        if (!names.includes(binaryInput.Name)) {\n          names.push(binaryInput.Name);\n        }\n      });\n      locationData.SenSet.forEach(sensor => {\n        if (!names.includes(sensor.Name)) {\n          names.push(sensor.Name);\n        }\n      });\n    });\n    setAllSensorNames(names);\n  }, [sensorData]);\n  useEffect(() => {\n    const refreshPage = () => {\n      window.location.reload();\n    };\n    const timeoutId = setTimeout(refreshPage, 120000); // รีเฟรชหน้าทุก ๆ 30 วินาที\n\n    return () => clearTimeout(timeoutId);\n  }, []);\n  const sensorOrder1 = [\"Door\", \"AC\", \"Smoke1\", \"Humidity\", \"Temperature\", \"Rectifier\", \"Recti11\", \"Recti12\", \"Recti21\", \"Recti22\"];\n  const sensorOrder2 = [\"AC\", \"smoke_Inven\", \"Smoke_Power\", \"Smoke_EQ1\", \"smoke_patching\", \"Humidity_Power\", \"Temp_Power\", \"Humidity_EQ\", \"Temp_EQ\", \"Humidity\", \"Temperature\", \"Gen1\"];\n  const sensorOrder3 = [\"Door\", \"AC\", \"Smoke1\", \"Smoke2\", \"Humidity\", \"Temperature\", \"Gen1\"];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"monitor2\",\n    children: [/*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"sensor-table2\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        className: \"thead-table2\",\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Sensor\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 13\n          }, this), sensorData.map((locationData, index) => /*#__PURE__*/_jsxDEV(\"th\", {\n            children: /*#__PURE__*/_jsxDEV(\"a\", {\n              href: locationData.ip,\n              target: \"_blank\",\n              rel: \"noopener noreferrer\",\n              children: locationData.location\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 17\n            }, this)\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        className: \"tbody-table2\",\n        children: sensorOrder1.map((sensorName, sensorIndex) => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"ssname2\",\n            children: sensorName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 15\n          }, this), sensorData.map((locationData, locationIndex) => {\n            const sensor = locationData.BinaryInSet.find(s => s.Name === sensorName) || locationData.SenSet.find(s => s.Name === sensorName);\n            const isDoor = sensorName === \"Door\";\n            const isAC = sensorName === \"AC\";\n            const isSmoke1 = sensorName === \"Smoke1\";\n            const isMotion1 = sensorName === \"Motion1\";\n            const isRectifier = sensorName === \"Rectifier\";\n            const isHumidity = sensorName === \"Humidity\";\n            const isTemperature = sensorName === \"Temperature\";\n            const isRecti11 = sensorName === \"Recti11\";\n            const isRecti12 = sensorName === \"Recti12\";\n            const isRecti21 = sensorName === \"Recti21\";\n            const isRecti22 = sensorName === \"Recti22\";\n            const isClose = sensor && sensor.Value === \"Close\";\n            const isNormal = sensor && sensor.Value === \"Normal\";\n            const isLost = sensor && sensor.Value === \"Lost!\"; //เป็น Lost! ให้พื้นหลังเป็น สีแดง\n\n            const isDash = sensor && sensor.Value === \"-\";\n            return /*#__PURE__*/_jsxDEV(\"td\", {\n              className: `\n            ${isDoor && isClose ? \"lightgray\" : \"\"}\n            ${isDoor && !isClose ? \"red flashing\" : \"\"}\n\n            ${isAC && isNormal ? \"lightpink\" : \"\"}\n            ${isAC && isLost ? \"red flashing\" : \"\"}\n\n            ${isSmoke1 && isNormal ? \"lightgray\" : \"\"}\n            ${isSmoke1 && isLost ? \"red flashing\" : \"\"}\n\n          \n\n            ${isRectifier && isNormal ? \"lightgray\" : \"\"}\n            ${isRectifier && isLost ? \"red flashing\" : \"\"}\n            ${isRectifier && !isNormal && !isDash ? \"lightgray\" : \"\"}\n\n            ${isHumidity && sensor.Value >= 10 && sensor.Value <= 80.0 ? \"lightgreen\" : \"\"}\n            ${isHumidity && sensor.Value >= 80.1 && sensor.Value <= 90 ? \"red flashing\" : \"\"}\n\n            ${isTemperature && sensor.Value >= 27 && sensor.Value <= 39 ? \"lightgreen\" : \"\"}\n            ${isTemperature && sensor.Value >= 10 && sensor.Value <= 26.9 ? \"lightblue\" : \"\"}\n            ${isTemperature && sensor.Value >= 39.1 && sensor.Value <= 99 ? \"red flashing\" : \"\"}\n            \n\n            ${isRecti11 && isNormal ? \"lightgray\" : \"\"}\n            ${isRecti11 && isLost ? \"red flashing\" : \"\"}\n            ${isRecti11 && !isNormal && !isDash ? \"lightgray\" : \"\"}\n\n            ${isRecti12 && isNormal ? \"lightgray\" : \"\"}\n            ${isRecti12 && isLost ? \"red flashing\" : \"\"}\n            ${isRecti12 && !isNormal && !isDash ? \"lightgray\" : \"\"}\n\n            ${isRecti21 && isNormal ? \"lightgray\" : \"\"}\n            ${isRecti21 && isLost ? \"red flashing\" : \"\"}\n            ${isRecti21 && !isNormal && !isDash ? \"lightgray\" : \"\"}\n\n            ${isRecti22 && isNormal ? \"lightgray\" : \"\"}\n            ${isRecti22 && isLost ? \"red flashing\" : \"\"}\n            ${isRecti22 && !isNormal && !isDash ? \"lightgray\" : \"\"}\n\n          `,\n              children: sensor ? sensor.Value : \"-\"\n            }, locationIndex, false, {\n              fileName: _jsxFileName,\n              lineNumber: 156,\n              columnNumber: 19\n            }, this);\n          })]\n        }, sensorIndex, true, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"sensor-table3\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        className: \"thead-table3\",\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Sensor\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 234,\n            columnNumber: 13\n          }, this), temp30Data.map((locationData, index) => /*#__PURE__*/_jsxDEV(\"th\", {\n            children: /*#__PURE__*/_jsxDEV(\"a\", {\n              href: locationData.ip,\n              target: \"_blank\",\n              rel: \"noopener noreferrer\",\n              children: locationData.location\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 237,\n              columnNumber: 17\n            }, this)\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 236,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        className: \"tbody-table3\",\n        children: sensorOrder3.map((sensorName, sensorIndex) => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"ssname3\",\n            children: sensorName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 251,\n            columnNumber: 15\n          }, this), temp30Data.map((locationData, locationIndex) => {\n            const sensor = locationData.BinaryInSet.find(s => s.Name === sensorName) || locationData.SenSet.find(s => s.Name === sensorName);\n            const isDoor = sensorName === \"Door\";\n            const isAC = sensorName === \"AC\";\n            const isSmoke1 = sensorName === \"Smoke1\";\n            const isSmoke2 = sensorName === \"Smoke2\";\n            const isHumidity = sensorName === \"Humidity\";\n            const isTemperature = sensorName === \"Temperature\";\n            const isGen1 = sensorName === \"Gen1\";\n            const isClose = sensor && sensor.Value === \"Close\";\n            const isSTB = sensor && sensor.Value === \"STB\";\n            const isNormal = sensor && sensor.Value === \"Normal\";\n            const isLost = sensor && sensor.Value === \"Lost!\";\n            const isDash = sensor && sensor.Value === \"-\";\n            return /*#__PURE__*/_jsxDEV(\"td\", {\n              className: `\n                    ${isDoor && isClose ? \"lightgray\" : \"\"}\n                    ${isDoor && !isClose ? \"red flashing\" : \"\"}\n\n                    ${isAC && isNormal ? \"lightpink\" : \"\"}\n                    ${isAC && isLost ? \"red flashing\" : \"\"}\n\n                    ${isSmoke1 && isNormal ? \"lightgray\" : \"\"}\n                    ${isSmoke1 && isLost ? \"red flashing\" : \"\"}\n\n                    ${isSmoke2 && isNormal ? \"lightgray\" : \"\"}\n                    ${isSmoke2 && isLost ? \"red flashing\" : \"\"}\n                    ${isSmoke2 && !isNormal && !isDash ? \"lightgray\" : \"\"}\n\n                    ${isHumidity && sensor.Value >= 10 && sensor.Value <= 80.0 ? \"lightgreen\" : \"\"}\n                    ${isHumidity && sensor.Value >= 80.1 && sensor.Value <= 90 ? \"red flashing\" : \"\"}\n\n                    ${isTemperature && sensor.Value >= 24 && sensor.Value <= 30 ? \"lightgreen\" : \"\"}\n                    ${isTemperature && sensor.Value >= 10 && sensor.Value <= 23.9 ? \"lightblue\" : \"\"}\n                    ${isTemperature && sensor.Value >= 30.1 && sensor.Value <= 90 ? \"red flashing\" : \"\"}\n\n                    ${isGen1 && isSTB ? \"lightgreen\" : \"\"}\n                    ${isGen1 && isLost ? \"red flashing\" : \"\"}\n                    ${isGen1 && (!sensor || !sensor.Value) ? \"lightgray\" : \"\"}\n\n                  \n                  `,\n              children: sensor ? sensor.Value : \"-\"\n            }, locationIndex, false, {\n              fileName: _jsxFileName,\n              lineNumber: 278,\n              columnNumber: 19\n            }, this);\n          })]\n        }, sensorIndex, true, {\n          fileName: _jsxFileName,\n          lineNumber: 250,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"sensor-table4\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        className: \"thead-table4\",\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Sensor\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 346,\n            columnNumber: 13\n          }, this), HYIData.map((locationData, index) => /*#__PURE__*/_jsxDEV(\"th\", {\n            children: /*#__PURE__*/_jsxDEV(\"a\", {\n              href: locationData.ip,\n              target: \"_blank\",\n              rel: \"noopener noreferrer\",\n              children: locationData.location\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 349,\n              columnNumber: 17\n            }, this)\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 348,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 345,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 344,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        className: \"tbody-table4\",\n        children: sensorOrder2.map((sensorName, sensorIndex) => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"ssname4\",\n            children: sensorName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 363,\n            columnNumber: 15\n          }, this), HYIData.map((locationData, locationIndex) => {\n            const sensor = locationData.BinaryInSet.find(s => s.Name === sensorName) || locationData.SenSet.find(s => s.Name === sensorName);\n            const issmoke_Inven = sensorName === \"smoke_Inven\";\n            const isSmoke_Power = sensorName === \"Smoke_Power\";\n            const isSmoke_EQ1 = sensorName === \"Smoke_EQ1\";\n            const isHumidity_Power = sensorName === \"Humidity_Power\";\n            const isTemp_Power = sensorName === \"Temp_Power\";\n            const isHumidity_EQ = sensorName === \"Humidity_EQ\";\n            const isTemp_EQ = sensorName === \"Temp_EQ\";\n            const isHumidity = sensorName === \"Humidity\";\n            const isTemperature = sensorName === \"Temperature\";\n            const isGen = sensorName === \"Gen\";\n            const isGen1 = sensorName === \"Gen1\";\n            const isAC = sensorName === \"AC\";\n            const smoke_patching = sensorName === \"smoke_patching\";\n            const isNormal = sensor && sensor.Value === \"Normal\";\n            const isLost = sensor && sensor.Value === \"Lost!\"; //เป็น Lost! ให้พื้นหลังเป็น สีแดง\n\n            const isRunning = sensor && sensor.Value === \"Running\";\n            const isSTB = sensor && sensor.Value === \"STB\";\n            const isDash = sensor && sensor.Value === \"-\";\n            return /*#__PURE__*/_jsxDEV(\"td\", {\n              className: `\n                    ${issmoke_Inven && isNormal ? \"lightgray\" : \"\"}\n                    ${issmoke_Inven && isLost ? \"red flashing\" : \"\"}\n                    ${issmoke_Inven && !isNormal && !isDash ? \"lightgray\" : \"\"}\n\n                    ${isSmoke_Power && isNormal ? \"lightgray\" : \"\"}\n                    ${isSmoke_Power && isLost ? \"red flashing\" : \"\"}\n                    ${isSmoke_Power && !isNormal && !isDash ? \"lightgray\" : \"\"}\n\n                    ${isSmoke_EQ1 && isNormal ? \"lightgray\" : \"\"}\n                    ${isSmoke_EQ1 && isLost ? \"red flashing\" : \"\"}\n                    ${isSmoke_EQ1 && !isNormal && !isDash ? \"lightgray\" : \"\"}\n\n                    ${isHumidity_Power && sensor && sensor.Value >= 10 && sensor.Value <= 80.0 ? \"lightgreen\" : \"\"}\n                    ${isHumidity_Power && sensor && sensor.Value >= 80.1 && sensor.Value <= 90 ? \"red flashing\" : \"\"}\n                    ${isHumidity_Power && (!sensor || !sensor.Value) ? \"lightgray\" : \"\"}\n\n                    ${isTemp_Power && sensor && sensor.Value >= 24 && sensor.Value <= 30 ? \"lightgreen\" : \"\"}\n                    ${isTemp_Power && sensor && sensor.Value >= 10 && sensor.Value <= 23.9 ? \"lightblue\" : \"\"}\n                    ${isTemp_Power && sensor && sensor.Value >= 30.1 && sensor.Value <= 99 ? \"red flashing\" : \"\"}\n                    ${isTemp_Power && (!sensor || !sensor.Value) ? \"lightgray\" : \"\"}\n\n                    ${isHumidity_EQ && sensor && sensor.Value >= 10 && sensor.Value <= 80.0 ? \"lightgreen\" : \"\"}\n                    ${isHumidity_EQ && sensor && sensor.Value >= 80.1 && sensor.Value <= 90 ? \"red flashing\" : \"\"}\n                    ${isHumidity_EQ && (!sensor || !sensor.Value) ? \"lightgray\" : \"\"}\n\n                    ${isTemp_EQ && sensor && sensor.Value >= 24 && sensor.Value <= 30 ? \"lightgreen\" : \"\"}\n                    ${isTemp_EQ && sensor && sensor.Value >= 10 && sensor.Value <= 23.9 ? \"lightblue\" : \"\"}\n                    ${isTemp_EQ && sensor && sensor.Value >= 30.1 && sensor.Value <= 99 ? \"red flashing\" : \"\"}\n                    ${isTemp_EQ && (!sensor || !sensor.Value) ? \"lightgray\" : \"\"}\n\n                    ${isHumidity && sensor && sensor.Value >= 10 && sensor.Value <= 80.0 ? \"lightgreen\" : \"\"}\n                    ${isHumidity && sensor && sensor.Value >= 80.1 && sensor.Value <= 90 ? \"red flashing\" : \"\"}\n                    ${isHumidity && (!sensor || !sensor.Value) ? \"lightgray\" : \"\"}\n\n                    ${isTemperature && sensor && sensor.Value >= 24 && sensor.Value <= 30 ? \"lightgreen\" : \"\"}\n                    ${isTemperature && sensor && sensor.Value >= 10 && sensor.Value <= 23.9 ? \"lightblue\" : \"\"}\n                    ${isTemperature && sensor && sensor.Value >= 30.1 && sensor.Value <= 99 ? \"red flashing\" : \"\"}\n                    ${isTemperature && (!sensor || !sensor.Value) ? \"lightgray\" : \"\"}\n\n                    ${isGen && isSTB ? \"lightgreen\" : \"\"}\n                    ${isGen && isRunning ? \"red flashing\" : \"\"}\n                    ${isGen && !isSTB && !isDash ? \"lightgray\" : \"\"}\n\n                    ${isGen1 && isSTB ? \"lightgreen\" : \"\"}\n                    ${isGen1 && isRunning ? \"red flashing\" : \"\"}\n                    ${isGen1 && !isSTB && !isDash ? \"lightgray\" : \"\"}\n\n                    ${isAC && isNormal ? \"lightpink\" : \"\"}\n                    ${isAC && isLost ? \"red flashing\" : \"\"}\n                    ${isAC && (!sensor || !sensor.Value) ? \"lightpink\" : \"\"}\n\n                    ${smoke_patching && isNormal ? \"lightgray\" : \"\"}\n                    ${smoke_patching && isLost ? \"red flashing\" : \"\"}\n                    ${smoke_patching && !isNormal && !isDash ? \"lightgray\" : \"\"}\n                  `,\n              children: sensor ? sensor.Value : \"-\"\n            }, locationIndex, false, {\n              fileName: _jsxFileName,\n              lineNumber: 397,\n              columnNumber: 19\n            }, this);\n          })]\n        }, sensorIndex, true, {\n          fileName: _jsxFileName,\n          lineNumber: 362,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 360,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 343,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 109,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"TIua166gxq6rXSqnaq1wrAqQyQA=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","App","_s","sensorData","setSensorData","HYIData","setHYIData","temp30Data","settemp30Data","allSensorNames","setAllSensorNames","get","then","response","data","catch","error","console","names","forEach","locationData","BinaryInSet","binaryInput","includes","Name","push","SenSet","sensor","refreshPage","window","location","reload","timeoutId","setTimeout","clearTimeout","sensorOrder1","sensorOrder2","sensorOrder3","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","index","href","ip","target","rel","sensorName","sensorIndex","locationIndex","find","s","isDoor","isAC","isSmoke1","isMotion1","isRectifier","isHumidity","isTemperature","isRecti11","isRecti12","isRecti21","isRecti22","isClose","Value","isNormal","isLost","isDash","isSmoke2","isGen1","isSTB","issmoke_Inven","isSmoke_Power","isSmoke_EQ1","isHumidity_Power","isTemp_Power","isHumidity_EQ","isTemp_EQ","isGen","smoke_patching","isRunning","_c","$RefreshReg$"],"sources":["C:/Users/NontakornKhanaphol/Documents/Nontakorn-joe/Dev/test-frontend/src/components/monitor2.js"],"sourcesContent":["/* eslint-disable no-unused-vars */\r\n\r\nimport React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport \"../assets/monitor2.css\";\r\nfunction App() {\r\n  const [sensorData, setSensorData] = useState([]);\r\n  const [HYIData, setHYIData] = useState([]); // เพิ่ม state สำหรับข้อมูลจาก HYI\r\n  const [temp30Data, settemp30Data] = useState([]);\r\n\r\n  const [allSensorNames, setAllSensorNames] = useState([]);\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get(\"http://localhost:3100/api/v1/monitor2\")\r\n      .then((response) => {\r\n        setSensorData(response.data.data);\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Error fetching monitor2 data:\", error);\r\n      });\r\n\r\n    axios\r\n      .get(\"http://localhost:3100/api/v1/HYI\")\r\n      .then((response) => {\r\n        setHYIData(response.data.data); // บันทึกข้อมูลจาก HYI\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Error fetching HYI data:\", error);\r\n      });\r\n\r\n    axios\r\n      .get(\"http://localhost:3100/api/v1/temp30\")\r\n      .then((response) => {\r\n        settemp30Data(response.data.data); // บันทึกข้อมูลจาก temp30\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Error fetching HYI data:\", error);\r\n      });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const names = [];\r\n    sensorData.forEach((locationData) => {\r\n      locationData.BinaryInSet.forEach((binaryInput) => {\r\n        if (!names.includes(binaryInput.Name)) {\r\n          names.push(binaryInput.Name);\r\n        }\r\n      });\r\n\r\n      locationData.SenSet.forEach((sensor) => {\r\n        if (!names.includes(sensor.Name)) {\r\n          names.push(sensor.Name);\r\n        }\r\n      });\r\n    });\r\n    setAllSensorNames(names);\r\n  }, [sensorData]);\r\n\r\n  useEffect(() => {\r\n    const refreshPage = () => {\r\n      window.location.reload();\r\n    };\r\n\r\n    const timeoutId = setTimeout(refreshPage, 120000); // รีเฟรชหน้าทุก ๆ 30 วินาที\r\n\r\n    return () => clearTimeout(timeoutId);\r\n  }, []);\r\n\r\n  const sensorOrder1 = [\r\n    \"Door\",\r\n    \"AC\",\r\n    \"Smoke1\",\r\n    \"Humidity\",\r\n    \"Temperature\",\r\n    \"Rectifier\",\r\n    \"Recti11\",\r\n    \"Recti12\",\r\n    \"Recti21\",\r\n    \"Recti22\",\r\n  ];\r\n\r\n  const sensorOrder2 = [\r\n    \"AC\",\r\n    \"smoke_Inven\",\r\n    \"Smoke_Power\",\r\n    \"Smoke_EQ1\",\r\n    \"smoke_patching\",\r\n    \"Humidity_Power\",\r\n    \"Temp_Power\",\r\n    \"Humidity_EQ\",\r\n    \"Temp_EQ\",\r\n    \"Humidity\",\r\n    \"Temperature\",\r\n    \"Gen1\",\r\n  ];\r\n\r\n  const sensorOrder3 = [\r\n    \"Door\",\r\n    \"AC\",\r\n    \"Smoke1\",\r\n    \"Smoke2\",\r\n    \"Humidity\",\r\n    \"Temperature\",\r\n    \"Gen1\",\r\n  ];\r\n\r\n  return (\r\n    <div className=\"monitor2\">\r\n      <table className=\"sensor-table2\">\r\n        <thead className=\"thead-table2\">\r\n          <tr>\r\n            <th>Sensor</th>\r\n            {sensorData.map((locationData, index) => (\r\n              <th key={index}>\r\n                <a\r\n                  href={locationData.ip}\r\n                  target=\"_blank\"\r\n                  rel=\"noopener noreferrer\"\r\n                >\r\n                  {locationData.location}\r\n                </a>\r\n              </th>\r\n            ))}\r\n          </tr>\r\n        </thead>\r\n        <tbody className=\"tbody-table2\">\r\n          {sensorOrder1.map((sensorName, sensorIndex) => (\r\n            <tr key={sensorIndex}>\r\n              <td className=\"ssname2\">{sensorName}</td>\r\n              {sensorData.map((locationData, locationIndex) => {\r\n                const sensor =\r\n                  locationData.BinaryInSet.find((s) => s.Name === sensorName) ||\r\n                  locationData.SenSet.find((s) => s.Name === sensorName);\r\n\r\n                const isDoor = sensorName === \"Door\";\r\n                const isAC = sensorName === \"AC\";\r\n                const isSmoke1 = sensorName === \"Smoke1\";\r\n                const isMotion1 = sensorName === \"Motion1\";\r\n                const isRectifier = sensorName === \"Rectifier\";\r\n\r\n                const isHumidity = sensorName === \"Humidity\";\r\n                const isTemperature = sensorName === \"Temperature\";\r\n\r\n                const isRecti11 = sensorName === \"Recti11\";\r\n                const isRecti12 = sensorName === \"Recti12\";\r\n                const isRecti21 = sensorName === \"Recti21\";\r\n                const isRecti22 = sensorName === \"Recti22\";\r\n\r\n                const isClose = sensor && sensor.Value === \"Close\";\r\n                const isNormal = sensor && sensor.Value === \"Normal\";\r\n                const isLost = sensor && sensor.Value === \"Lost!\"; //เป็น Lost! ให้พื้นหลังเป็น สีแดง\r\n\r\n                const isDash = sensor && sensor.Value === \"-\";\r\n                return (\r\n                  <td\r\n                    key={locationIndex}\r\n                    className={`\r\n            ${isDoor && isClose ? \"lightgray\" : \"\"}\r\n            ${isDoor && !isClose ? \"red flashing\" : \"\"}\r\n\r\n            ${isAC && isNormal ? \"lightpink\" : \"\"}\r\n            ${isAC && isLost ? \"red flashing\" : \"\"}\r\n\r\n            ${isSmoke1 && isNormal ? \"lightgray\" : \"\"}\r\n            ${isSmoke1 && isLost ? \"red flashing\" : \"\"}\r\n\r\n          \r\n\r\n            ${isRectifier && isNormal ? \"lightgray\" : \"\"}\r\n            ${isRectifier && isLost ? \"red flashing\" : \"\"}\r\n            ${isRectifier && !isNormal && !isDash ? \"lightgray\" : \"\"}\r\n\r\n            ${\r\n              isHumidity && sensor.Value >= 10 && sensor.Value <= 80.0\r\n                ? \"lightgreen\"\r\n                : \"\"\r\n            }\r\n            ${\r\n              isHumidity && sensor.Value >= 80.1 && sensor.Value <= 90\r\n                ? \"red flashing\"\r\n                : \"\"\r\n            }\r\n\r\n            ${\r\n              isTemperature && sensor.Value >= 27 && sensor.Value <= 39\r\n                ? \"lightgreen\"\r\n                : \"\"\r\n            }\r\n            ${\r\n              isTemperature && sensor.Value >= 10 && sensor.Value <= 26.9\r\n                ? \"lightblue\"\r\n                : \"\"\r\n            }\r\n            ${\r\n              isTemperature && sensor.Value >= 39.1 && sensor.Value <= 99\r\n                ? \"red flashing\"\r\n                : \"\"\r\n            }\r\n            \r\n\r\n            ${isRecti11 && isNormal ? \"lightgray\" : \"\"}\r\n            ${isRecti11 && isLost ? \"red flashing\" : \"\"}\r\n            ${isRecti11 && !isNormal && !isDash ? \"lightgray\" : \"\"}\r\n\r\n            ${isRecti12 && isNormal ? \"lightgray\" : \"\"}\r\n            ${isRecti12 && isLost ? \"red flashing\" : \"\"}\r\n            ${isRecti12 && !isNormal && !isDash ? \"lightgray\" : \"\"}\r\n\r\n            ${isRecti21 && isNormal ? \"lightgray\" : \"\"}\r\n            ${isRecti21 && isLost ? \"red flashing\" : \"\"}\r\n            ${isRecti21 && !isNormal && !isDash ? \"lightgray\" : \"\"}\r\n\r\n            ${isRecti22 && isNormal ? \"lightgray\" : \"\"}\r\n            ${isRecti22 && isLost ? \"red flashing\" : \"\"}\r\n            ${isRecti22 && !isNormal && !isDash ? \"lightgray\" : \"\"}\r\n\r\n          `}\r\n                  >\r\n                    {sensor ? sensor.Value : \"-\"}\r\n                  </td>\r\n                );\r\n              })}\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n\r\n      {/* table temp30 -------------------------------------------------------------- */}\r\n\r\n      <table className=\"sensor-table3\">\r\n        <thead className=\"thead-table3\">\r\n          <tr>\r\n            <th>Sensor</th>\r\n            {temp30Data.map((locationData, index) => (\r\n              <th key={index}>\r\n                <a\r\n                  href={locationData.ip}\r\n                  target=\"_blank\"\r\n                  rel=\"noopener noreferrer\"\r\n                >\r\n                  {locationData.location}\r\n                </a>\r\n              </th>\r\n            ))}\r\n          </tr>\r\n        </thead>\r\n        <tbody className=\"tbody-table3\">\r\n          {sensorOrder3.map((sensorName, sensorIndex) => (\r\n            <tr key={sensorIndex}>\r\n              <td className=\"ssname3\">{sensorName}</td>\r\n              {temp30Data.map((locationData, locationIndex) => {\r\n                const sensor =\r\n                  locationData.BinaryInSet.find((s) => s.Name === sensorName) ||\r\n                  locationData.SenSet.find((s) => s.Name === sensorName);\r\n\r\n                const isDoor = sensorName === \"Door\";\r\n                const isAC = sensorName === \"AC\";\r\n\r\n                const isSmoke1 = sensorName === \"Smoke1\";\r\n                const isSmoke2 = sensorName === \"Smoke2\";\r\n\r\n                const isHumidity = sensorName === \"Humidity\";\r\n                const isTemperature = sensorName === \"Temperature\";\r\n\r\n                const isGen1 = sensorName === \"Gen1\";\r\n\r\n                const isClose = sensor && sensor.Value === \"Close\";\r\n\r\n                const isSTB = sensor && sensor.Value === \"STB\";\r\n\r\n                const isNormal = sensor && sensor.Value === \"Normal\";\r\n                const isLost = sensor && sensor.Value === \"Lost!\";\r\n\r\n                const isDash = sensor && sensor.Value === \"-\";\r\n\r\n                return (\r\n                  <td\r\n                    key={locationIndex}\r\n                    className={`\r\n                    ${isDoor && isClose ? \"lightgray\" : \"\"}\r\n                    ${isDoor && !isClose ? \"red flashing\" : \"\"}\r\n\r\n                    ${isAC && isNormal ? \"lightpink\" : \"\"}\r\n                    ${isAC && isLost ? \"red flashing\" : \"\"}\r\n\r\n                    ${isSmoke1 && isNormal ? \"lightgray\" : \"\"}\r\n                    ${isSmoke1 && isLost ? \"red flashing\" : \"\"}\r\n\r\n                    ${isSmoke2 && isNormal ? \"lightgray\" : \"\"}\r\n                    ${isSmoke2 && isLost ? \"red flashing\" : \"\"}\r\n                    ${isSmoke2 && !isNormal && !isDash ? \"lightgray\" : \"\"}\r\n\r\n                    ${\r\n                      isHumidity && sensor.Value >= 10 && sensor.Value <= 80.0\r\n                        ? \"lightgreen\"\r\n                        : \"\"\r\n                    }\r\n                    ${\r\n                      isHumidity && sensor.Value >= 80.1 && sensor.Value <= 90\r\n                        ? \"red flashing\"\r\n                        : \"\"\r\n                    }\r\n\r\n                    ${\r\n                      isTemperature && sensor.Value >= 24 && sensor.Value <= 30\r\n                        ? \"lightgreen\"\r\n                        : \"\"\r\n                    }\r\n                    ${\r\n                      isTemperature &&\r\n                      sensor.Value >= 10 &&\r\n                      sensor.Value <= 23.9\r\n                        ? \"lightblue\"\r\n                        : \"\"\r\n                    }\r\n                    ${\r\n                      isTemperature &&\r\n                      sensor.Value >= 30.1 &&\r\n                      sensor.Value <= 90\r\n                        ? \"red flashing\"\r\n                        : \"\"\r\n                    }\r\n\r\n                    ${isGen1 && isSTB ? \"lightgreen\" : \"\"}\r\n                    ${isGen1 && isLost ? \"red flashing\" : \"\"}\r\n                    ${isGen1 && (!sensor || !sensor.Value) ? \"lightgray\" : \"\"}\r\n\r\n                  \r\n                  `}\r\n                  >\r\n                    {sensor ? sensor.Value : \"-\"}\r\n                  </td>\r\n                );\r\n              })}\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n\r\n      {/* table HYI -------------------------------------------------------------- */}\r\n\r\n      <table className=\"sensor-table4\">\r\n        <thead className=\"thead-table4\">\r\n          <tr>\r\n            <th>Sensor</th>\r\n            {HYIData.map((locationData, index) => (\r\n              <th key={index}>\r\n                <a\r\n                  href={locationData.ip}\r\n                  target=\"_blank\"\r\n                  rel=\"noopener noreferrer\"\r\n                >\r\n                  {locationData.location}\r\n                </a>\r\n              </th>\r\n            ))}\r\n          </tr>\r\n        </thead>\r\n        <tbody className=\"tbody-table4\">\r\n          {sensorOrder2.map((sensorName, sensorIndex) => (\r\n            <tr key={sensorIndex}>\r\n              <td className=\"ssname4\">{sensorName}</td>\r\n              {HYIData.map((locationData, locationIndex) => {\r\n                const sensor =\r\n                  locationData.BinaryInSet.find((s) => s.Name === sensorName) ||\r\n                  locationData.SenSet.find((s) => s.Name === sensorName);\r\n\r\n                const issmoke_Inven = sensorName === \"smoke_Inven\";\r\n                const isSmoke_Power = sensorName === \"Smoke_Power\";\r\n                const isSmoke_EQ1 = sensorName === \"Smoke_EQ1\";\r\n\r\n                const isHumidity_Power = sensorName === \"Humidity_Power\";\r\n                const isTemp_Power = sensorName === \"Temp_Power\";\r\n\r\n                const isHumidity_EQ = sensorName === \"Humidity_EQ\";\r\n                const isTemp_EQ = sensorName === \"Temp_EQ\";\r\n\r\n                const isHumidity = sensorName === \"Humidity\";\r\n                const isTemperature = sensorName === \"Temperature\";\r\n\r\n                const isGen = sensorName === \"Gen\";\r\n                const isGen1 = sensorName === \"Gen1\";\r\n\r\n                const isAC = sensorName === \"AC\";\r\n\r\n                const smoke_patching = sensorName === \"smoke_patching\";\r\n\r\n                const isNormal = sensor && sensor.Value === \"Normal\";\r\n                const isLost = sensor && sensor.Value === \"Lost!\"; //เป็น Lost! ให้พื้นหลังเป็น สีแดง\r\n\r\n                const isRunning = sensor && sensor.Value === \"Running\";\r\n                const isSTB = sensor && sensor.Value === \"STB\";\r\n                const isDash = sensor && sensor.Value === \"-\";\r\n\r\n                return (\r\n                  <td\r\n                    key={locationIndex}\r\n                    className={`\r\n                    ${issmoke_Inven && isNormal ? \"lightgray\" : \"\"}\r\n                    ${issmoke_Inven && isLost ? \"red flashing\" : \"\"}\r\n                    ${issmoke_Inven && !isNormal && !isDash ? \"lightgray\" : \"\"}\r\n\r\n                    ${isSmoke_Power && isNormal ? \"lightgray\" : \"\"}\r\n                    ${isSmoke_Power && isLost ? \"red flashing\" : \"\"}\r\n                    ${isSmoke_Power && !isNormal && !isDash ? \"lightgray\" : \"\"}\r\n\r\n                    ${isSmoke_EQ1 && isNormal ? \"lightgray\" : \"\"}\r\n                    ${isSmoke_EQ1 && isLost ? \"red flashing\" : \"\"}\r\n                    ${isSmoke_EQ1 && !isNormal && !isDash ? \"lightgray\" : \"\"}\r\n\r\n                    ${\r\n                      isHumidity_Power &&\r\n                      sensor &&\r\n                      sensor.Value >= 10 &&\r\n                      sensor.Value <= 80.0\r\n                        ? \"lightgreen\"\r\n                        : \"\"\r\n                    }\r\n                    ${\r\n                      isHumidity_Power &&\r\n                      sensor &&\r\n                      sensor.Value >= 80.1 &&\r\n                      sensor.Value <= 90\r\n                        ? \"red flashing\"\r\n                        : \"\"\r\n                    }\r\n                    ${\r\n                      isHumidity_Power && (!sensor || !sensor.Value)\r\n                        ? \"lightgray\"\r\n                        : \"\"\r\n                    }\r\n\r\n                    ${\r\n                      isTemp_Power &&\r\n                      sensor &&\r\n                      sensor.Value >= 24 &&\r\n                      sensor.Value <= 30\r\n                        ? \"lightgreen\"\r\n                        : \"\"\r\n                    }\r\n                    ${\r\n                      isTemp_Power &&\r\n                      sensor &&\r\n                      sensor.Value >= 10 &&\r\n                      sensor.Value <= 23.9\r\n                        ? \"lightblue\"\r\n                        : \"\"\r\n                    }\r\n                    ${\r\n                      isTemp_Power &&\r\n                      sensor &&\r\n                      sensor.Value >= 30.1 &&\r\n                      sensor.Value <= 99\r\n                        ? \"red flashing\"\r\n                        : \"\"\r\n                    }\r\n                    ${\r\n                      isTemp_Power && (!sensor || !sensor.Value)\r\n                        ? \"lightgray\"\r\n                        : \"\"\r\n                    }\r\n\r\n                    ${\r\n                      isHumidity_EQ &&\r\n                      sensor &&\r\n                      sensor.Value >= 10 &&\r\n                      sensor.Value <= 80.0\r\n                        ? \"lightgreen\"\r\n                        : \"\"\r\n                    }\r\n                    ${\r\n                      isHumidity_EQ &&\r\n                      sensor &&\r\n                      sensor.Value >= 80.1 &&\r\n                      sensor.Value <= 90\r\n                        ? \"red flashing\"\r\n                        : \"\"\r\n                    }\r\n                    ${\r\n                      isHumidity_EQ && (!sensor || !sensor.Value)\r\n                        ? \"lightgray\"\r\n                        : \"\"\r\n                    }\r\n\r\n                    ${\r\n                      isTemp_EQ &&\r\n                      sensor &&\r\n                      sensor.Value >= 24 &&\r\n                      sensor.Value <= 30\r\n                        ? \"lightgreen\"\r\n                        : \"\"\r\n                    }\r\n                    ${\r\n                      isTemp_EQ &&\r\n                      sensor &&\r\n                      sensor.Value >= 10 &&\r\n                      sensor.Value <= 23.9\r\n                        ? \"lightblue\"\r\n                        : \"\"\r\n                    }\r\n                    ${\r\n                      isTemp_EQ &&\r\n                      sensor &&\r\n                      sensor.Value >= 30.1 &&\r\n                      sensor.Value <= 99\r\n                        ? \"red flashing\"\r\n                        : \"\"\r\n                    }\r\n                    ${\r\n                      isTemp_EQ && (!sensor || !sensor.Value) ? \"lightgray\" : \"\"\r\n                    }\r\n\r\n                    ${\r\n                      isHumidity &&\r\n                      sensor &&\r\n                      sensor.Value >= 10 &&\r\n                      sensor.Value <= 80.0\r\n                        ? \"lightgreen\"\r\n                        : \"\"\r\n                    }\r\n                    ${\r\n                      isHumidity &&\r\n                      sensor &&\r\n                      sensor.Value >= 80.1 &&\r\n                      sensor.Value <= 90\r\n                        ? \"red flashing\"\r\n                        : \"\"\r\n                    }\r\n                    ${\r\n                      isHumidity && (!sensor || !sensor.Value)\r\n                        ? \"lightgray\"\r\n                        : \"\"\r\n                    }\r\n\r\n                    ${\r\n                      isTemperature &&\r\n                      sensor &&\r\n                      sensor.Value >= 24 &&\r\n                      sensor.Value <= 30\r\n                        ? \"lightgreen\"\r\n                        : \"\"\r\n                    }\r\n                    ${\r\n                      isTemperature &&\r\n                      sensor &&\r\n                      sensor.Value >= 10 &&\r\n                      sensor.Value <= 23.9\r\n                        ? \"lightblue\"\r\n                        : \"\"\r\n                    }\r\n                    ${\r\n                      isTemperature &&\r\n                      sensor &&\r\n                      sensor.Value >= 30.1 &&\r\n                      sensor.Value <= 99\r\n                        ? \"red flashing\"\r\n                        : \"\"\r\n                    }\r\n                    ${\r\n                      isTemperature && (!sensor || !sensor.Value)\r\n                        ? \"lightgray\"\r\n                        : \"\"\r\n                    }\r\n\r\n                    ${isGen && isSTB ? \"lightgreen\" : \"\"}\r\n                    ${isGen && isRunning ? \"red flashing\" : \"\"}\r\n                    ${isGen && !isSTB && !isDash ? \"lightgray\" : \"\"}\r\n\r\n                    ${isGen1 && isSTB ? \"lightgreen\" : \"\"}\r\n                    ${isGen1 && isRunning ? \"red flashing\" : \"\"}\r\n                    ${isGen1 && !isSTB && !isDash ? \"lightgray\" : \"\"}\r\n\r\n                    ${isAC && isNormal ? \"lightpink\" : \"\"}\r\n                    ${isAC && isLost ? \"red flashing\" : \"\"}\r\n                    ${isAC && (!sensor || !sensor.Value) ? \"lightpink\" : \"\"}\r\n\r\n                    ${smoke_patching && isNormal ? \"lightgray\" : \"\"}\r\n                    ${smoke_patching && isLost ? \"red flashing\" : \"\"}\r\n                    ${smoke_patching && !isNormal && !isDash ? \"lightgray\" : \"\"}\r\n                  `}\r\n                  >\r\n                    {sensor ? sensor.Value : \"-\"}\r\n                  </td>\r\n                );\r\n              })}\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}