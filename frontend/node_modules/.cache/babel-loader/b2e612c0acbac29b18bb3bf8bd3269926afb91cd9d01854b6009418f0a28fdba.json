{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\NontakornKhanaphol\\\\Documents\\\\Nontakorn-joe\\\\Dev\\\\ping-cctv-test\\\\frontend\\\\src\\\\pages\\\\Home.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport '../assets/cctv.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [apiData, setApiData] = useState(null);\n  const [webSocketData, setWebSocketData] = useState(null);\n\n  // Fetch API data\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await axios.get(process.env.REACT_APP_HOST + '/api/ping/check-cctv');\n        console.log(process.env.REACT_APP_HOST, response.data);\n        setApiData(response.data);\n      } catch (error) {\n        console.error('Error fetching data:', error);\n      }\n    };\n    fetchData();\n    const intervalId = setInterval(fetchData, 2000); // Refresh every 2 seconds\n\n    return () => clearInterval(intervalId); // Cleanup interval on unmount\n  }, []);\n\n  // Connect to WebSocket server\n  useEffect(() => {\n    const ws = new WebSocket('ws://localhost:4000');\n    console.log('WebSocket :', ws);\n    ws.onmessage = event => {\n      const data = JSON.parse(event.data);\n      setWebSocketData(data);\n      // console.log('set :',data)\n    };\n\n    ws.onclose = () => {\n      console.log('WebSocket connection closed');\n    };\n    ws.onopen = () => {\n      console.log('WebSocket connection opened');\n    };\n    if (ws.readyState === WebSocket.CLOSED) {\n      console.log('WebSocket connection closed before it was established');\n    }\n    return () => {\n      ws.close();\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"table-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"table\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: apiData && apiData.data.map(room => /*#__PURE__*/_jsxDEV(\"th\", {\n            className: \"room-name\",\n            children: room.roomname && room.roomname.substring(0, 3)\n          }, room.roomname, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          className: \"bb\",\n          children: apiData && apiData.data.map(room => /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"table\", {\n              className: \"status-table\",\n              children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n                children: room.status.split(',').map((item, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: item.split(',').map((subItem, subIndex) => /*#__PURE__*/_jsxDEV(\"td\", {\n                    className: `status-cell ${item.trim() === 'ON' ? 'status-on' : 'status-off'}`,\n                    children: /*#__PURE__*/_jsxDEV(\"div\", {\n                      children: item.trim()\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 81,\n                      columnNumber: 27\n                    }, this)\n                  }, index, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 80,\n                    columnNumber: 27\n                  }, this))\n                }, index, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 78,\n                  columnNumber: 23\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 76,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 17\n            }, this)\n          }, room.roomname, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), webSocketData && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"WebSocket Data: \", JSON.stringify(webSocketData)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 25\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"aAgnCjos9JNnWjYK8ytCWsfnLLE=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","App","_s","apiData","setApiData","webSocketData","setWebSocketData","fetchData","response","get","process","env","REACT_APP_HOST","console","log","data","error","intervalId","setInterval","clearInterval","ws","WebSocket","onmessage","event","JSON","parse","onclose","onopen","readyState","CLOSED","close","className","children","map","room","roomname","substring","fileName","_jsxFileName","lineNumber","columnNumber","status","split","item","index","subItem","subIndex","trim","stringify","_c","$RefreshReg$"],"sources":["C:/Users/NontakornKhanaphol/Documents/Nontakorn-joe/Dev/ping-cctv-test/frontend/src/pages/Home.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport '../assets/cctv.css';\n\nconst App = () => {\n  const [apiData, setApiData] = useState(null);\n  const [webSocketData, setWebSocketData] = useState(null);\n\n  // Fetch API data\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await axios.get(process.env.REACT_APP_HOST + '/api/ping/check-cctv');\n        console.log(process.env.REACT_APP_HOST, response.data);\n        setApiData(response.data);\n      } catch (error) {\n        console.error('Error fetching data:', error);\n      }\n    };\n\n    fetchData();\n\n    const intervalId = setInterval(fetchData, 2000); // Refresh every 2 seconds\n\n    return () => clearInterval(intervalId); // Cleanup interval on unmount\n\n  }, []);\n\n\n  // Connect to WebSocket server\n  useEffect(() => {\n    const ws = new WebSocket('ws://localhost:4000');\n\n    console.log('WebSocket :', ws);\n\n    ws.onmessage = (event) => {\n      const data = JSON.parse(event.data);\n      setWebSocketData(data);\n      // console.log('set :',data)\n    };\n\n    ws.onclose = () => {\n      console.log('WebSocket connection closed');\n    };\n\n    ws.onopen = () => {\n      console.log('WebSocket connection opened');\n    };\n\n    if (ws.readyState === WebSocket.CLOSED) {\n      console.log('WebSocket connection closed before it was established');\n    }\n\n    return () => {\n      ws.close();\n    };\n  },\n\n    []);\n\n  return (\n    <div className=\"table-container\">\n      <table className=\"table\">\n        <thead>\n          <tr>\n            {apiData && apiData.data.map(room => (\n              <th key={room.roomname} className=\"room-name\" >{room.roomname && room.roomname.substring(0, 3) }</th>\n            ))}\n          </tr>\n        </thead>\n        <tbody>\n          <tr className='bb'>\n            {apiData && apiData.data.map(room => (\n              <td key={room.roomname}>\n                <table className=\"status-table\">\n                  <tbody>\n                    {room.status.split(',').map((item, index) => (\n                      <tr key={index}>\n                        {item.split(',').map((subItem, subIndex) => (\n                          <td key={index} className={`status-cell ${item.trim() === 'ON' ? 'status-on' : 'status-off'}`}>\n                          <div>{item.trim()}</div>\n                        </td>\n                        ))}\n                      </tr>\n                    ))}\n                  </tbody>\n                </table>\n              </td>\n            ))}\n          </tr>\n        </tbody>\n      </table>\n      {webSocketData && <p>WebSocket Data: {JSON.stringify(webSocketData)}</p>}\n    </div>\n  );\n\n};\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}