{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\NontakornKhanaphol\\\\Documents\\\\Nontakorn-joe\\\\Dev\\\\test-frontend\\\\src\\\\components\\\\cctv1.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport \"../assets/monitor1.css\";\nimport JastelLogo from \"../assets/images/jastel.jpg\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [sensorData, setSensorData] = useState([]);\n  const [allSensorNames, setAllSensorNames] = useState([]);\n  useEffect(() => {\n    axios.get(\"http://localhost:3200/api/v1/monitor\").then(response => {\n      setSensorData(response.data.data);\n    }).catch(error => {\n      console.error(\"Error fetching data:\", error);\n    });\n  }, []);\n  useEffect(() => {\n    const names = [];\n    sensorData.forEach(locationData => {\n      locationData.BinaryInSet.forEach(binaryInput => {\n        if (!names.includes(binaryInput.Name)) {\n          names.push(binaryInput.Name);\n        }\n      });\n      locationData.SenSet.forEach(sensor => {\n        if (!names.includes(sensor.Name)) {\n          names.push(sensor.Name);\n        }\n      });\n    });\n    setAllSensorNames(names);\n  }, [sensorData]);\n  useEffect(() => {\n    const refreshPage = () => {\n      window.location.reload();\n    };\n    const timeoutId = setTimeout(refreshPage, 120000); // รีเฟรชหน้าทุก ๆ 30 วินาที\n\n    return () => clearTimeout(timeoutId);\n  }, []);\n  const sensorOrder = [\"Door\", \"AC\", \"Smoke1\", \"Humidity\", \"Temperature\", \"Motion1\", \"Rectifier\"];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"monitor1\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: JastelLogo,\n        alt: \"Jastel Logo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"sensor-table1\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        className: \"thead-table1\",\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Sensor\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 3\n          }, this), sensorData.map((locationData, index) => /*#__PURE__*/_jsxDEV(\"th\", {\n            children: /*#__PURE__*/_jsxDEV(\"a\", {\n              href: locationData.ip,\n              target: \"_blank\",\n              rel: \"noopener noreferrer\",\n              children: locationData.location\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 7\n            }, this)\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 5\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        className: \"tbody-table1\",\n        children: sensorOrder.map((sensorName, sensorIndex) => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"ssname\",\n            children: sensorName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 15\n          }, this), sensorData.map((locationData, locationIndex) => {\n            const sensor = locationData.BinaryInSet.find(s => s.Name === sensorName) || locationData.SenSet.find(s => s.Name === sensorName);\n            const isDoor = sensorName === \"Door\";\n            const isAC = sensorName === \"AC\";\n            const isSmoke1 = sensorName === \"Smoke1\";\n            const isSmoke2 = sensorName === \"smoke2\";\n            const isMotion1 = sensorName === \"Motion1\";\n            const isRectifier = sensorName === \"Rectifier\";\n            const isHumidity = sensorName === \"Humidity\";\n            const isTemperature = sensorName === \"Temperature\";\n            const isOpen = sensor && sensor.Value === \"Open\";\n            const isClose = sensor && sensor.Value === \"Close\";\n            const isNormal = sensor && sensor.Value === \"Normal\";\n            const isLost = sensor && sensor.Value === \"Lost!\"; //เป็น Lost! ให้พื้นหลังเป็น สีแดง\n\n            const isDash = sensor && sensor.Value === \"-\";\n            const isQHE = locationData.location === \"QHE\";\n            const isHBM = locationData.location === \"HBM\";\n            const sensorValue = isDoor && isQHE || isDoor && isHBM ? \"-\" : sensor ? sensor.Value : \"-\";\n            return /*#__PURE__*/_jsxDEV(\"td\", {\n              className: `\n\n            ${isDoor && (isQHE || isHBM) ? \"lightgray\" : \"\"}\n            ${isDoor && isClose ? \"lightgray\" : \"\"}\n            ${isDoor && isOpen && !isQHE && !isHBM ? \"red flashing\" : \"\"}\n\n\n\n            ${isAC && isNormal ? \"lightpink\" : \"\"}\n            ${isAC && isLost ? \"red flashing\" : \"\"}\n\n            ${isSmoke1 && isNormal ? \"lightgray\" : \"\"}\n            ${isSmoke1 && isLost ? \"red flashing\" : \"\"}\n\n            ${isSmoke2 && isNormal ? \"lightgray\" : \"\"}\n            ${isSmoke2 && isLost ? \"red flashing\" : \"\"}\n            ${isSmoke2 && !isNormal && !isDash ? \"lightgray\" : \"\"}\n\n            ${isMotion1 && isNormal ? \"lightyellow\" : \"\"}\n            ${isMotion1 && isLost ? \"red flashing\" : \"\"}\n            ${isMotion1 && !isNormal && !isDash ? \"lightyellow\" : \"\"}\n\n            ${isRectifier && isNormal ? \"lightgray\" : \"\"}\n            ${isRectifier && isLost ? \"red flashing\" : \"\"}\n            ${isRectifier && !isNormal && !isDash ? \"lightgray\" : \"\"}\n\n            ${isHumidity && sensor.Value >= 10 && sensor.Value <= 80.0 ? \"lightgreen\" : \"\"}\n            ${isHumidity && sensor.Value >= 80.1 && sensor.Value <= 90 ? \"red flashing\" : \"\"}\n\n            ${isTemperature && sensor.Value >= 27 && sensor.Value <= 39 ? \"lightgreen\" : \"\"}\n            ${isTemperature && sensor.Value >= 10 && sensor.Value <= 26.9 ? \"lightblue\" : \"\"}\n            ${isTemperature && sensor.Value >= 39.1 && sensor.Value <= 99 ? \"red flashing\" : \"\"}\n\n          `,\n              children: sensorValue\n            }, locationIndex, false, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 19\n            }, this);\n          })]\n        }, sensorIndex, true, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"wpuWA5HEI32M8SxSJvH8Yf1HyNM=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","axios","JastelLogo","jsxDEV","_jsxDEV","App","_s","sensorData","setSensorData","allSensorNames","setAllSensorNames","get","then","response","data","catch","error","console","names","forEach","locationData","BinaryInSet","binaryInput","includes","Name","push","SenSet","sensor","refreshPage","window","location","reload","timeoutId","setTimeout","clearTimeout","sensorOrder","className","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","map","index","href","ip","target","rel","sensorName","sensorIndex","locationIndex","find","s","isDoor","isAC","isSmoke1","isSmoke2","isMotion1","isRectifier","isHumidity","isTemperature","isOpen","Value","isClose","isNormal","isLost","isDash","isQHE","isHBM","sensorValue","_c","$RefreshReg$"],"sources":["C:/Users/NontakornKhanaphol/Documents/Nontakorn-joe/Dev/test-frontend/src/components/cctv1.js"],"sourcesContent":["\r\nimport React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport \"../assets/monitor1.css\";\r\nimport JastelLogo from \"../assets/images/jastel.jpg\";\r\n\r\nfunction App() {\r\n  const [sensorData, setSensorData] = useState([]);\r\n  const [allSensorNames, setAllSensorNames] = useState([]);\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get(\"http://localhost:3200/api/v1/monitor\")\r\n      .then((response) => {\r\n        setSensorData(response.data.data);\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Error fetching data:\", error);\r\n      });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const names = [];\r\n    sensorData.forEach((locationData) => {\r\n      locationData.BinaryInSet.forEach((binaryInput) => {\r\n        if (!names.includes(binaryInput.Name)) {\r\n          names.push(binaryInput.Name);\r\n        }\r\n      });\r\n\r\n      locationData.SenSet.forEach((sensor) => {\r\n        if (!names.includes(sensor.Name)) {\r\n          names.push(sensor.Name);\r\n        }\r\n      });\r\n    });\r\n    setAllSensorNames(names);\r\n  }, [sensorData]);\r\n\r\n  useEffect(() => {\r\n    const refreshPage = () => {\r\n      window.location.reload();\r\n    };\r\n  \r\n    const timeoutId = setTimeout(refreshPage, 120000); // รีเฟรชหน้าทุก ๆ 30 วินาที\r\n  \r\n    return () => clearTimeout(timeoutId);\r\n  }, []);\r\n  \r\n\r\n  const sensorOrder = [\r\n    \"Door\",\r\n    \"AC\",\r\n    \"Smoke1\",\r\n    \"Humidity\",\r\n    \"Temperature\",\r\n    \"Motion1\",\r\n    \"Rectifier\",\r\n  ];\r\n\r\n  return (\r\n    <div className=\"monitor1\">\r\n      <div>\r\n        <img src={JastelLogo} alt=\"Jastel Logo\" />\r\n      </div>\r\n      <table className=\"sensor-table1\">\r\n        <thead className=\"thead-table1\">\r\n        <tr>\r\n  <th>Sensor</th>\r\n  {sensorData.map((locationData, index) => (\r\n    <th key={index}>\r\n      <a href={locationData.ip} target=\"_blank\" rel=\"noopener noreferrer\">\r\n        {locationData.location}\r\n      </a>\r\n    </th>\r\n  ))}\r\n</tr>\r\n        </thead>\r\n        <tbody className=\"tbody-table1\">\r\n          {sensorOrder.map((sensorName, sensorIndex) => (\r\n            <tr key={sensorIndex}>\r\n              <td className=\"ssname\">{sensorName}</td>\r\n              {sensorData.map((locationData, locationIndex) => {\r\n                const sensor =\r\n                  locationData.BinaryInSet.find((s) => s.Name === sensorName) ||\r\n                  locationData.SenSet.find((s) => s.Name === sensorName);\r\n                const isDoor = sensorName === \"Door\";\r\n                const isAC = sensorName === \"AC\";\r\n                const isSmoke1 = sensorName === \"Smoke1\";\r\n                const isSmoke2 = sensorName === \"smoke2\";\r\n                const isMotion1 = sensorName === \"Motion1\";\r\n                const isRectifier = sensorName === \"Rectifier\";\r\n\r\n                const isHumidity = sensorName === \"Humidity\";\r\n                const isTemperature = sensorName === \"Temperature\";\r\n\r\n\r\n\r\n                const isOpen = sensor && sensor.Value === \"Open\";\r\n\r\n                const isClose = sensor && sensor.Value === \"Close\";\r\n                const isNormal = sensor && sensor.Value === \"Normal\";\r\n                const isLost = sensor && sensor.Value === \"Lost!\"; //เป็น Lost! ให้พื้นหลังเป็น สีแดง\r\n\r\n                const isDash = sensor && sensor.Value === \"-\";\r\n\r\n\r\n                const isQHE = locationData.location === \"QHE\";\r\n                const isHBM = locationData.location === \"HBM\";\r\n\r\n\r\n\r\n                const sensorValue = (isDoor && isQHE) || (isDoor && isHBM) ? \"-\" : (sensor ? sensor.Value : \"-\");\r\n\r\n\r\n\r\n                return (\r\n                  <td\r\n                    key={locationIndex}\r\n                    className={`\r\n\r\n            ${isDoor && (isQHE || isHBM) ? \"lightgray\" : \"\"}\r\n            ${isDoor && isClose ? \"lightgray\" : \"\"}\r\n            ${isDoor && isOpen && !isQHE && !isHBM? \"red flashing\" : \"\"}\r\n\r\n\r\n\r\n            ${isAC && isNormal ? \"lightpink\" : \"\"}\r\n            ${isAC && isLost ? \"red flashing\" : \"\"}\r\n\r\n            ${isSmoke1 && isNormal ? \"lightgray\" : \"\"}\r\n            ${isSmoke1 && isLost ? \"red flashing\" : \"\"}\r\n\r\n            ${isSmoke2 && isNormal ? \"lightgray\" : \"\"}\r\n            ${isSmoke2 && isLost ? \"red flashing\" : \"\"}\r\n            ${isSmoke2 && !isNormal && !isDash ? \"lightgray\" : \"\"}\r\n\r\n            ${isMotion1 && isNormal ? \"lightyellow\" : \"\"}\r\n            ${isMotion1 && isLost ? \"red flashing\" : \"\"}\r\n            ${isMotion1 && !isNormal && !isDash ? \"lightyellow\" : \"\"}\r\n\r\n            ${isRectifier && isNormal ? \"lightgray\" : \"\"}\r\n            ${isRectifier && isLost ? \"red flashing\" : \"\"}\r\n            ${isRectifier && !isNormal && !isDash ? \"lightgray\" : \"\"}\r\n\r\n            ${isHumidity && sensor.Value >= 10 && sensor.Value <= 80.0 ? \"lightgreen\" : \"\"}\r\n            ${isHumidity && sensor.Value >= 80.1 && sensor.Value <= 90 ? \"red flashing\" : \"\"}\r\n\r\n            ${isTemperature && sensor.Value >= 27 && sensor.Value <= 39 ? \"lightgreen\" : \"\"}\r\n            ${isTemperature && sensor.Value >= 10 && sensor.Value <= 26.9 ? \"lightblue\" : \"\"}\r\n            ${isTemperature && sensor.Value >= 39.1 && sensor.Value <= 99 ? \"red flashing\" : \"\"}\r\n\r\n          `}\r\n                  >\r\n                    {/* {sensor ? sensor.Value : \"-\"} */}\r\n\r\n                    {sensorValue}\r\n\r\n                  </td>\r\n                );\r\n              })}\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":";;AACA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAO,wBAAwB;AAC/B,OAAOC,UAAU,MAAM,6BAA6B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErD,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACU,cAAc,EAAEC,iBAAiB,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAExDC,SAAS,CAAC,MAAM;IACdC,KAAK,CACFU,GAAG,CAAC,sCAAsC,CAAC,CAC3CC,IAAI,CAAEC,QAAQ,IAAK;MAClBL,aAAa,CAACK,QAAQ,CAACC,IAAI,CAACA,IAAI,CAAC;IACnC,CAAC,CAAC,CACDC,KAAK,CAAEC,KAAK,IAAK;MAChBC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;IAC9C,CAAC,CAAC;EACN,CAAC,EAAE,EAAE,CAAC;EAENhB,SAAS,CAAC,MAAM;IACd,MAAMkB,KAAK,GAAG,EAAE;IAChBX,UAAU,CAACY,OAAO,CAAEC,YAAY,IAAK;MACnCA,YAAY,CAACC,WAAW,CAACF,OAAO,CAAEG,WAAW,IAAK;QAChD,IAAI,CAACJ,KAAK,CAACK,QAAQ,CAACD,WAAW,CAACE,IAAI,CAAC,EAAE;UACrCN,KAAK,CAACO,IAAI,CAACH,WAAW,CAACE,IAAI,CAAC;QAC9B;MACF,CAAC,CAAC;MAEFJ,YAAY,CAACM,MAAM,CAACP,OAAO,CAAEQ,MAAM,IAAK;QACtC,IAAI,CAACT,KAAK,CAACK,QAAQ,CAACI,MAAM,CAACH,IAAI,CAAC,EAAE;UAChCN,KAAK,CAACO,IAAI,CAACE,MAAM,CAACH,IAAI,CAAC;QACzB;MACF,CAAC,CAAC;IACJ,CAAC,CAAC;IACFd,iBAAiB,CAACQ,KAAK,CAAC;EAC1B,CAAC,EAAE,CAACX,UAAU,CAAC,CAAC;EAEhBP,SAAS,CAAC,MAAM;IACd,MAAM4B,WAAW,GAAGA,CAAA,KAAM;MACxBC,MAAM,CAACC,QAAQ,CAACC,MAAM,CAAC,CAAC;IAC1B,CAAC;IAED,MAAMC,SAAS,GAAGC,UAAU,CAACL,WAAW,EAAE,MAAM,CAAC,CAAC,CAAC;;IAEnD,OAAO,MAAMM,YAAY,CAACF,SAAS,CAAC;EACtC,CAAC,EAAE,EAAE,CAAC;EAGN,MAAMG,WAAW,GAAG,CAClB,MAAM,EACN,IAAI,EACJ,QAAQ,EACR,UAAU,EACV,aAAa,EACb,SAAS,EACT,WAAW,CACZ;EAED,oBACE/B,OAAA;IAAKgC,SAAS,EAAC,UAAU;IAAAC,QAAA,gBACvBjC,OAAA;MAAAiC,QAAA,eACEjC,OAAA;QAAKkC,GAAG,EAAEpC,UAAW;QAACqC,GAAG,EAAC;MAAa;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACvC,CAAC,eACNvC,OAAA;MAAOgC,SAAS,EAAC,eAAe;MAAAC,QAAA,gBAC9BjC,OAAA;QAAOgC,SAAS,EAAC,cAAc;QAAAC,QAAA,eAC/BjC,OAAA;UAAAiC,QAAA,gBACNjC,OAAA;YAAAiC,QAAA,EAAI;UAAM;YAAAG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,EACdpC,UAAU,CAACqC,GAAG,CAAC,CAACxB,YAAY,EAAEyB,KAAK,kBAClCzC,OAAA;YAAAiC,QAAA,eACEjC,OAAA;cAAG0C,IAAI,EAAE1B,YAAY,CAAC2B,EAAG;cAACC,MAAM,EAAC,QAAQ;cAACC,GAAG,EAAC,qBAAqB;cAAAZ,QAAA,EAChEjB,YAAY,CAACU;YAAQ;cAAAU,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACrB;UAAC,GAHGE,KAAK;YAAAL,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAIV,CACL,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACA;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACU,CAAC,eACRvC,OAAA;QAAOgC,SAAS,EAAC,cAAc;QAAAC,QAAA,EAC5BF,WAAW,CAACS,GAAG,CAAC,CAACM,UAAU,EAAEC,WAAW,kBACvC/C,OAAA;UAAAiC,QAAA,gBACEjC,OAAA;YAAIgC,SAAS,EAAC,QAAQ;YAAAC,QAAA,EAAEa;UAAU;YAAAV,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,EACvCpC,UAAU,CAACqC,GAAG,CAAC,CAACxB,YAAY,EAAEgC,aAAa,KAAK;YAC/C,MAAMzB,MAAM,GACVP,YAAY,CAACC,WAAW,CAACgC,IAAI,CAAEC,CAAC,IAAKA,CAAC,CAAC9B,IAAI,KAAK0B,UAAU,CAAC,IAC3D9B,YAAY,CAACM,MAAM,CAAC2B,IAAI,CAAEC,CAAC,IAAKA,CAAC,CAAC9B,IAAI,KAAK0B,UAAU,CAAC;YACxD,MAAMK,MAAM,GAAGL,UAAU,KAAK,MAAM;YACpC,MAAMM,IAAI,GAAGN,UAAU,KAAK,IAAI;YAChC,MAAMO,QAAQ,GAAGP,UAAU,KAAK,QAAQ;YACxC,MAAMQ,QAAQ,GAAGR,UAAU,KAAK,QAAQ;YACxC,MAAMS,SAAS,GAAGT,UAAU,KAAK,SAAS;YAC1C,MAAMU,WAAW,GAAGV,UAAU,KAAK,WAAW;YAE9C,MAAMW,UAAU,GAAGX,UAAU,KAAK,UAAU;YAC5C,MAAMY,aAAa,GAAGZ,UAAU,KAAK,aAAa;YAIlD,MAAMa,MAAM,GAAGpC,MAAM,IAAIA,MAAM,CAACqC,KAAK,KAAK,MAAM;YAEhD,MAAMC,OAAO,GAAGtC,MAAM,IAAIA,MAAM,CAACqC,KAAK,KAAK,OAAO;YAClD,MAAME,QAAQ,GAAGvC,MAAM,IAAIA,MAAM,CAACqC,KAAK,KAAK,QAAQ;YACpD,MAAMG,MAAM,GAAGxC,MAAM,IAAIA,MAAM,CAACqC,KAAK,KAAK,OAAO,CAAC,CAAC;;YAEnD,MAAMI,MAAM,GAAGzC,MAAM,IAAIA,MAAM,CAACqC,KAAK,KAAK,GAAG;YAG7C,MAAMK,KAAK,GAAGjD,YAAY,CAACU,QAAQ,KAAK,KAAK;YAC7C,MAAMwC,KAAK,GAAGlD,YAAY,CAACU,QAAQ,KAAK,KAAK;YAI7C,MAAMyC,WAAW,GAAIhB,MAAM,IAAIc,KAAK,IAAMd,MAAM,IAAIe,KAAM,GAAG,GAAG,GAAI3C,MAAM,GAAGA,MAAM,CAACqC,KAAK,GAAG,GAAI;YAIhG,oBACE5D,OAAA;cAEEgC,SAAS,EAAG;AAChC;AACA,cAAcmB,MAAM,KAAKc,KAAK,IAAIC,KAAK,CAAC,GAAG,WAAW,GAAG,EAAG;AAC5D,cAAcf,MAAM,IAAIU,OAAO,GAAG,WAAW,GAAG,EAAG;AACnD,cAAcV,MAAM,IAAIQ,MAAM,IAAI,CAACM,KAAK,IAAI,CAACC,KAAK,GAAE,cAAc,GAAG,EAAG;AACxE;AACA;AACA;AACA,cAAcd,IAAI,IAAIU,QAAQ,GAAG,WAAW,GAAG,EAAG;AAClD,cAAcV,IAAI,IAAIW,MAAM,GAAG,cAAc,GAAG,EAAG;AACnD;AACA,cAAcV,QAAQ,IAAIS,QAAQ,GAAG,WAAW,GAAG,EAAG;AACtD,cAAcT,QAAQ,IAAIU,MAAM,GAAG,cAAc,GAAG,EAAG;AACvD;AACA,cAAcT,QAAQ,IAAIQ,QAAQ,GAAG,WAAW,GAAG,EAAG;AACtD,cAAcR,QAAQ,IAAIS,MAAM,GAAG,cAAc,GAAG,EAAG;AACvD,cAAcT,QAAQ,IAAI,CAACQ,QAAQ,IAAI,CAACE,MAAM,GAAG,WAAW,GAAG,EAAG;AAClE;AACA,cAAcT,SAAS,IAAIO,QAAQ,GAAG,aAAa,GAAG,EAAG;AACzD,cAAcP,SAAS,IAAIQ,MAAM,GAAG,cAAc,GAAG,EAAG;AACxD,cAAcR,SAAS,IAAI,CAACO,QAAQ,IAAI,CAACE,MAAM,GAAG,aAAa,GAAG,EAAG;AACrE;AACA,cAAcR,WAAW,IAAIM,QAAQ,GAAG,WAAW,GAAG,EAAG;AACzD,cAAcN,WAAW,IAAIO,MAAM,GAAG,cAAc,GAAG,EAAG;AAC1D,cAAcP,WAAW,IAAI,CAACM,QAAQ,IAAI,CAACE,MAAM,GAAG,WAAW,GAAG,EAAG;AACrE;AACA,cAAcP,UAAU,IAAIlC,MAAM,CAACqC,KAAK,IAAI,EAAE,IAAIrC,MAAM,CAACqC,KAAK,IAAI,IAAI,GAAG,YAAY,GAAG,EAAG;AAC3F,cAAcH,UAAU,IAAIlC,MAAM,CAACqC,KAAK,IAAI,IAAI,IAAIrC,MAAM,CAACqC,KAAK,IAAI,EAAE,GAAG,cAAc,GAAG,EAAG;AAC7F;AACA,cAAcF,aAAa,IAAInC,MAAM,CAACqC,KAAK,IAAI,EAAE,IAAIrC,MAAM,CAACqC,KAAK,IAAI,EAAE,GAAG,YAAY,GAAG,EAAG;AAC5F,cAAcF,aAAa,IAAInC,MAAM,CAACqC,KAAK,IAAI,EAAE,IAAIrC,MAAM,CAACqC,KAAK,IAAI,IAAI,GAAG,WAAW,GAAG,EAAG;AAC7F,cAAcF,aAAa,IAAInC,MAAM,CAACqC,KAAK,IAAI,IAAI,IAAIrC,MAAM,CAACqC,KAAK,IAAI,EAAE,GAAG,cAAc,GAAG,EAAG;AAChG;AACA,WAAY;cAAA3B,QAAA,EAISkC;YAAW,GAtCPnB,aAAa;cAAAZ,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAwChB,CAAC;UAET,CAAC,CAAC;QAAA,GAhFKQ,WAAW;UAAAX,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAiFhB,CACL;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACG,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEV;AAACrC,EAAA,CAjKQD,GAAG;AAAAmE,EAAA,GAAHnE,GAAG;AAmKZ,eAAeA,GAAG;AAAC,IAAAmE,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}