{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\NontakornKhanaphol\\\\Documents\\\\Nontakorn-joe\\\\Dev\\\\Git-Hub\\\\cctv-ping\\\\frontend\\\\src\\\\pages\\\\Home.js\",\n  _s = $RefreshSig$();\n//home page\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport Table1 from \"../components/cctv1\";\nimport Table2 from \"../components/cctv2\";\nimport Table3 from \"../components/cctv3\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [apiData, setApiData] = useState(null);\n  const [webSocketData, setWebSocketData] = useState(null);\n  const [totalCCTV, setTotalIP] = useState(0);\n  const [totalOnlineCCTV, setTotalOnlineCCTV] = useState(0);\n  const [totalOfflineCCTV, setTotalOfflineCCTV] = useState(0);\n  console.log(process.env.REACT_APP_HOST);\n\n  // Fetch API data\n  useEffect(() => {\n    const fetchData1 = async () => {\n      try {\n        const response = await axios.get(process.env.REACT_APP_HOST + \"/api/ping/check-cctv\");\n        const response2 = await axios.get(process.env.REACT_APP_HOST + \"/api/ping/check-cctv2\");\n        setApiData(response.data);\n        setApiData(response2.data);\n        if (response.data && response.data.data) {\n          // นับจำนวน IP ทั้งหมด\n          let totalIPCount = 0;\n          response.data.data.forEach(room => {\n            // ตรวจสอบว่าห้องไม่ใช่ \"HBM\" ก่อนที่จะนับ\n            if (room.roomname !== \"HBM\") {\n              totalIPCount += room.status.length;\n            }\n          });\n          setTotalIP(totalIPCount);\n        }\n        if (response.data && response.data.data) {\n          let totalOnlineCCTV = 0;\n          let totalOfflineCCTV = 0;\n          response.data.data.forEach(room => {\n            // ตรวจสอบว่าห้องไม่ใช่ \"HBM\" ก่อนที่จะนับ\n            if (room.roomname !== \"HBM\") {\n              room.status.forEach(camera => {\n                if (camera.camera === \"ON\") {\n                  totalOnlineCCTV++;\n                } else if (camera.camera === \"OFF\") {\n                  totalOfflineCCTV++;\n                }\n              });\n            }\n          });\n          setTotalOnlineCCTV(totalOnlineCCTV);\n          setTotalOfflineCCTV(totalOfflineCCTV);\n        }\n        if (response2.data && response2.data.results && response2.data.results.data) {\n          let totalIPCount = 0;\n          Object.values(response2.data.results.data).forEach(phase => {\n            phase.forEach(room => {\n              totalIPCount++;\n            });\n          });\n          setTotalIP(totalIPCount);\n          let totalOnlineCCTV2 = 0;\n          let totalOfflineCCTV2 = 0;\n          Object.values(response2.data.results.data).forEach(phase => {\n            phase.forEach(room => {\n              if (room.status === \"ON\") {\n                totalOnlineCCTV2++;\n              } else {\n                totalOfflineCCTV2++;\n              }\n            });\n          });\n          setTotalOnlineCCTV(totalOnlineCCTV2);\n          setTotalOfflineCCTV(totalOfflineCCTV2);\n        }\n      } catch (error) {\n        console.error(\"Error fetching data:\", error);\n      }\n    };\n    fetchData1();\n    const intervalId = setInterval(fetchData1, 2000);\n    return () => clearInterval(intervalId);\n  }, []);\n\n  // Connect to WebSocket server\n  useEffect(() => {\n    const ws = new WebSocket(\"ws://localhost:4000\");\n    console.log(\"WebSocket :\", ws);\n    ws.onclose = () => {\n      console.log(\"WebSocket connection closed\");\n    };\n    ws.onopen = () => {\n      console.log(\"WebSocket connection opened\");\n    };\n    if (ws.readyState === WebSocket.CLOSED) {\n      console.log(\"WebSocket connection closed before it was established\");\n    }\n    return () => {\n      ws.close();\n    };\n  }, []);\n  useEffect(() => {\n    const handleMessage = event => {\n      const data = JSON.parse(event.data);\n      setWebSocketData(data);\n      // console.log('set :',data)\n    };\n\n    if (webSocketData) {\n      const ws = new WebSocket(\"ws://localhost:4000\");\n      ws.onmessage = handleMessage;\n      return () => {\n        ws.close();\n      };\n    }\n  }, [webSocketData]);\n  function YourComponent() {\n    const currentDate = new Date();\n    // const thaiOptions = { weekday: 'long', year: 'numeric', month: 'long', day: 'numeric' };\n    // const thaiDate = currentDate.toLocaleDateString('th-TH', thaiOptions);\n    const options = {\n      day: \"2-digit\",\n      month: \"2-digit\",\n      year: \"numeric\"\n    };\n    const formattedDate = currentDate.toLocaleDateString(\"th-TH\", options);\n    const timeOptions = {\n      hour: \"2-digit\",\n      minute: \"2-digit\"\n    };\n    const formattedTime = currentDate.toLocaleTimeString(\"th-TH\", timeOptions);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: formattedDate\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: formattedTime\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"table-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"img-container\",\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: require(\"../assets/jastel.jpg\"),\n        alt: \"Jastel Logo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"date\",\n      children: [\" \", /*#__PURE__*/_jsxDEV(YourComponent, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 9\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"title1\",\n      children: \"Jastel CCTV Monitor\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"title2\",\n      children: [\"Total CCTV: \", totalCCTV]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"title3\",\n      children: [\"Online CCTV: \", totalOnlineCCTV]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"title4\",\n      children: [\"Offline CCTV: \", totalOfflineCCTV]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"title5\",\n      children: \"Node center : 69\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Table1, {\n      apiData: apiData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Table2, {\n      apiData: apiData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Table3, {\n      apiData2: apiData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 176,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"Utr8aQNu7zc3tb3p/J6VvLCBYOw=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","axios","Table1","Table2","Table3","jsxDEV","_jsxDEV","App","_s","apiData","setApiData","webSocketData","setWebSocketData","totalCCTV","setTotalIP","totalOnlineCCTV","setTotalOnlineCCTV","totalOfflineCCTV","setTotalOfflineCCTV","console","log","process","env","REACT_APP_HOST","fetchData1","response","get","response2","data","totalIPCount","forEach","room","roomname","status","length","camera","results","Object","values","phase","totalOnlineCCTV2","totalOfflineCCTV2","error","intervalId","setInterval","clearInterval","ws","WebSocket","onclose","onopen","readyState","CLOSED","close","handleMessage","event","JSON","parse","onmessage","YourComponent","currentDate","Date","options","day","month","year","formattedDate","toLocaleDateString","timeOptions","hour","minute","formattedTime","toLocaleTimeString","children","fileName","_jsxFileName","lineNumber","columnNumber","className","src","require","alt","apiData2","_c","$RefreshReg$"],"sources":["C:/Users/NontakornKhanaphol/Documents/Nontakorn-joe/Dev/Git-Hub/cctv-ping/frontend/src/pages/Home.js"],"sourcesContent":["//home page\r\nimport React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport Table1 from \"../components/cctv1\";\r\nimport Table2 from \"../components/cctv2\";\r\nimport Table3 from \"../components/cctv3\";\r\n\r\nconst App = () => {\r\n  const [apiData, setApiData] = useState(null);\r\n  const [webSocketData, setWebSocketData] = useState(null);\r\n  const [totalCCTV, setTotalIP] = useState(0);\r\n  const [totalOnlineCCTV, setTotalOnlineCCTV] = useState(0);\r\n  const [totalOfflineCCTV, setTotalOfflineCCTV] = useState(0);\r\n  \r\n\r\n\r\n  console.log(process.env.REACT_APP_HOST);\r\n\r\n  // Fetch API data\r\n  useEffect(() => {\r\n    const fetchData1 = async () => {\r\n      try {\r\n        const response = await axios.get(\r\n          process.env.REACT_APP_HOST + \"/api/ping/check-cctv\"\r\n        );\r\n\r\n\r\n        const response2 = await axios.get(\r\n          process.env.REACT_APP_HOST + \"/api/ping/check-cctv2\"\r\n        );\r\n\r\n        setApiData(response.data);\r\n        setApiData(response2.data);\r\n\r\n  \r\n        \r\n        if (response.data && response.data.data) {\r\n          // นับจำนวน IP ทั้งหมด\r\n          let totalIPCount = 0;\r\n          response.data.data.forEach(room => {\r\n            // ตรวจสอบว่าห้องไม่ใช่ \"HBM\" ก่อนที่จะนับ\r\n            if (room.roomname !== \"HBM\") {\r\n              totalIPCount += room.status.length;\r\n            }\r\n          });\r\n          setTotalIP(totalIPCount);\r\n        }\r\n\r\n\r\n        if (response.data && response.data.data) {\r\n          let totalOnlineCCTV = 0;\r\n          let totalOfflineCCTV = 0;\r\n        \r\n          response.data.data.forEach(room => {\r\n            // ตรวจสอบว่าห้องไม่ใช่ \"HBM\" ก่อนที่จะนับ\r\n            if (room.roomname !== \"HBM\") {\r\n              room.status.forEach(camera => {\r\n                if (camera.camera === \"ON\") {\r\n                  totalOnlineCCTV++;\r\n                } else if (camera.camera === \"OFF\") {\r\n                  totalOfflineCCTV++;\r\n                }\r\n              });\r\n            }\r\n          });\r\n        \r\n          setTotalOnlineCCTV(totalOnlineCCTV);\r\n          setTotalOfflineCCTV(totalOfflineCCTV);\r\n        }\r\n\r\n\r\n\r\n\r\n        if (response2.data && response2.data.results && response2.data.results.data) {\r\n          let totalIPCount = 0;\r\n          Object.values(response2.data.results.data).forEach(phase => {\r\n            phase.forEach(room => {\r\n              totalIPCount++;\r\n            });\r\n          });\r\n          setTotalIP(totalIPCount);\r\n  \r\n          let totalOnlineCCTV2 = 0;\r\n          let totalOfflineCCTV2 = 0;\r\n  \r\n          Object.values(response2.data.results.data).forEach(phase => {\r\n            phase.forEach(room => {\r\n              if (room.status === \"ON\") {\r\n                totalOnlineCCTV2++;\r\n              } else {\r\n                totalOfflineCCTV2++;\r\n              }\r\n            });\r\n          });\r\n  \r\n          setTotalOnlineCCTV(totalOnlineCCTV2);\r\n          setTotalOfflineCCTV(totalOfflineCCTV2);\r\n        }\r\n\r\n\r\n      } catch (error) {\r\n        console.error(\"Error fetching data:\", error);\r\n      }\r\n    };\r\n\r\n\r\n\r\n    fetchData1();\r\n\r\n    const intervalId = setInterval(fetchData1, 2000);\r\n\r\n    return () => clearInterval(intervalId);\r\n  }, []);\r\n\r\n\r\n\r\n  // Connect to WebSocket server\r\n  useEffect(() => {\r\n    const ws = new WebSocket(\"ws://localhost:4000\");\r\n\r\n    console.log(\"WebSocket :\", ws);\r\n\r\n    ws.onclose = () => {\r\n      console.log(\"WebSocket connection closed\");\r\n    };\r\n\r\n    ws.onopen = () => {\r\n      console.log(\"WebSocket connection opened\");\r\n    };\r\n\r\n    if (ws.readyState === WebSocket.CLOSED) {\r\n      console.log(\"WebSocket connection closed before it was established\");\r\n    }\r\n\r\n    return () => {\r\n      ws.close();\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const handleMessage = (event) => {\r\n      const data = JSON.parse(event.data);\r\n      setWebSocketData(data);\r\n      // console.log('set :',data)\r\n    };\r\n\r\n    if (webSocketData) {\r\n      const ws = new WebSocket(\"ws://localhost:4000\");\r\n      ws.onmessage = handleMessage;\r\n\r\n      return () => {\r\n        ws.close();\r\n      };\r\n    }\r\n  }, [webSocketData]);\r\n\r\n  function YourComponent() {\r\n    const currentDate = new Date();\r\n    // const thaiOptions = { weekday: 'long', year: 'numeric', month: 'long', day: 'numeric' };\r\n    // const thaiDate = currentDate.toLocaleDateString('th-TH', thaiOptions);\r\n    const options = { day: \"2-digit\", month: \"2-digit\", year: \"numeric\" };\r\n    const formattedDate = currentDate.toLocaleDateString(\"th-TH\", options);\r\n\r\n    const timeOptions = { hour: \"2-digit\", minute: \"2-digit\" };\r\n    const formattedTime = currentDate.toLocaleTimeString(\"th-TH\", timeOptions);\r\n\r\n    return (\r\n      <div>\r\n        <h1>{formattedDate}</h1>\r\n        <h2>{formattedTime}</h2>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"table-container\">\r\n      <div className=\"img-container\">\r\n        <img src={require(\"../assets/jastel.jpg\")} alt=\"Jastel Logo\" />\r\n      </div>\r\n      <h2 className=\"date\">\r\n        {\" \"}\r\n        <YourComponent />{\" \"}\r\n      </h2>\r\n      <br></br>\r\n      <br></br>\r\n      <br></br>\r\n      <br></br>\r\n\r\n      <h1 className=\"title1\">Jastel CCTV Monitor</h1>\r\n\r\n      <h2 className=\"title2\">Total CCTV: {totalCCTV}</h2>\r\n      <h2 className=\"title3\">Online CCTV: {totalOnlineCCTV}</h2>\r\n      <h2 className=\"title4\">Offline CCTV: {totalOfflineCCTV}</h2>\r\n      <h2 className=\"title5\">Node center : 69</h2>\r\n\r\n\r\n\r\n      <Table1 apiData={apiData} />\r\n      <Table2 apiData={apiData} />\r\n      <Table3 apiData2={apiData} />\r\n      \r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}