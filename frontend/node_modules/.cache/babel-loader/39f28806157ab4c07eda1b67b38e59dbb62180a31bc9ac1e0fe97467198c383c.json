{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\NontakornKhanaphol\\\\Documents\\\\Nontakorn-joe\\\\Dev\\\\ping-cctv-test\\\\frontend\\\\src\\\\pages\\\\Home.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\n// import '../assets/cctv.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [apiData, setApiData] = useState(null);\n  const [webSocketData, setWebSocketData] = useState(null);\n\n  // Fetch API data\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await axios.get(process.env.REACT_APP_HOST + '/api/ping/check-cctv');\n        console.log(process.env.REACT_APP_HOST, response.data);\n        setApiData(response.data);\n      } catch (error) {\n        console.error('Error fetching data:', error);\n      }\n    };\n    fetchData();\n  }, []);\n\n  // Connect to WebSocket server\n  useEffect(() => {\n    const ws = new WebSocket('ws://localhost:4000');\n    console.log('WebSocket :', ws);\n    ws.onmessage = event => {\n      const data = JSON.parse(event.data);\n      setWebSocketData(data);\n      // console.log('set :',data)\n    };\n\n    ws.onclose = () => {\n      console.log('WebSocket connection closed');\n    };\n    ws.onopen = () => {\n      console.log('WebSocket connection opened');\n    };\n    if (ws.readyState === WebSocket.CLOSED) {\n      console.log('WebSocket connection closed before it was established');\n    }\n    return () => {\n      ws.close();\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"CCTV Status\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Room\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"CCTV\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Status\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: apiData && apiData.data.map(room => /*#__PURE__*/_jsxDEV(React.Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              rowSpan: room.data.length,\n              children: room.room\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: room.data[0].ip\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: room.data[0].status\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 13\n          }, this), room.data.slice(1).map(cctv => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: cctv.ip\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: cctv.status\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 17\n            }, this)]\n          }, cctv.ip, true, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 15\n          }, this))]\n        }, room.room, true, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 5\n    }, this), webSocketData && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"WebSocket Data: \", JSON.stringify(webSocketData)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 23\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"aAgnCjos9JNnWjYK8ytCWsfnLLE=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","App","_s","apiData","setApiData","webSocketData","setWebSocketData","fetchData","response","get","process","env","REACT_APP_HOST","console","log","data","error","ws","WebSocket","onmessage","event","JSON","parse","onclose","onopen","readyState","CLOSED","close","children","fileName","_jsxFileName","lineNumber","columnNumber","map","room","Fragment","rowSpan","length","ip","status","slice","cctv","stringify","_c","$RefreshReg$"],"sources":["C:/Users/NontakornKhanaphol/Documents/Nontakorn-joe/Dev/ping-cctv-test/frontend/src/pages/Home.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\n// import '../assets/cctv.css';\n\nconst App = () => {\n  const [apiData, setApiData] = useState(null);\n  const [webSocketData, setWebSocketData] = useState(null);\n\n  // Fetch API data\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await axios.get(process.env.REACT_APP_HOST+'/api/ping/check-cctv');\n        console.log(process.env.REACT_APP_HOST,response.data); \n        setApiData(response.data);\n      } catch (error) {\n        console.error('Error fetching data:', error);\n      }\n    };\n\n    fetchData();\n  }, []);\n\n \n  // Connect to WebSocket server\nuseEffect(() => {\n  const ws = new WebSocket('ws://localhost:4000');\n\n  console.log('WebSocket :', ws);\n\n  ws.onmessage = (event) => {\n    const data = JSON.parse(event.data);\n    setWebSocketData(data);\n    // console.log('set :',data)\n  };\n\n  ws.onclose = () => {\n    console.log('WebSocket connection closed');\n  };\n\n  ws.onopen = () => {\n    console.log('WebSocket connection opened');\n  };\n\n  if (ws.readyState === WebSocket.CLOSED) {\n    console.log('WebSocket connection closed before it was established');\n  }\n\n  return () => {\n    ws.close();\n  };\n}, \n\n[]); \n\n  return (\n    <div>\n    <h1>CCTV Status</h1>\n    <table>\n      <thead>\n        <tr>\n          <th>Room</th>\n          <th>CCTV</th>\n          <th>Status</th>\n        </tr>\n      </thead>\n      <tbody>\n        {apiData && apiData.data.map(room => (\n          <React.Fragment key={room.room}>\n            <tr>\n              <td rowSpan={room.data.length}>{room.room}</td>\n              <td>{room.data[0].ip}</td>\n              <td>{room.data[0].status}</td>\n            </tr>\n            {room.data.slice(1).map(cctv => (\n              <tr key={cctv.ip}>\n                <td>{cctv.ip}</td>\n                <td>{cctv.status}</td>\n              </tr>\n            ))}\n          </React.Fragment>\n        ))}\n      </tbody>\n    </table>\n    {webSocketData && <p>WebSocket Data: {JSON.stringify(webSocketData)}</p>}\n  </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}