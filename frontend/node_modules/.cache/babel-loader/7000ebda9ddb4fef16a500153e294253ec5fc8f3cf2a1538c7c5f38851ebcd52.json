{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\NontakornKhanaphol\\\\Documents\\\\Nontakorn-joe\\\\Dev\\\\ping-cctv-test\\\\frontend\\\\src\\\\pages\\\\Home.js\",\n  _s2 = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport '../assets/cctv.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s2();\n  var _s = $RefreshSig$();\n  const [apiData, setApiData] = useState(null);\n  const [webSocketData, setWebSocketData] = useState(null);\n\n  // Fetch API data\n  _s(useEffect(_s(() => {\n    _s();\n    const fetchData = async () => {\n      try {\n        const response = await axios.get(process.env.REACT_APP_HOST + '/api/ping/check-cctv');\n        console.log(process.env.REACT_APP_HOST, response.data);\n        setApiData(response.data);\n      } catch (error) {\n        console.error('Error fetching data:', error);\n      }\n    };\n    useEffect(() => {\n      fetchData(); // Initial fetch\n\n      const intervalId = setInterval(fetchData, 2000); // Refresh every 2 seconds\n\n      return () => clearInterval(intervalId); // Cleanup interval on unmount\n    }, []);\n    fetchData();\n  }, \"OD7bBpZva5O2jO+Puf00hKivP7c=\"), []), \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n  // Connect to WebSocket server\n  useEffect(() => {\n    const ws = new WebSocket('ws://localhost:4000');\n    console.log('WebSocket :', ws);\n    ws.onmessage = event => {\n      const data = JSON.parse(event.data);\n      setWebSocketData(data);\n      // console.log('set :',data)\n    };\n\n    ws.onclose = () => {\n      console.log('WebSocket connection closed');\n    };\n    ws.onopen = () => {\n      console.log('WebSocket connection opened');\n    };\n    if (ws.readyState === WebSocket.CLOSED) {\n      console.log('WebSocket connection closed before it was established');\n    }\n    return () => {\n      ws.close();\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"all\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: apiData && apiData.data.map(room => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: room.room\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"table\", {\n              className: \"ip\",\n              children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n                children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: room.data.map((cctv, index) => /*#__PURE__*/_jsxDEV(React.Fragment, {\n                    children: /*#__PURE__*/_jsxDEV(\"td\", {\n                      className: \"status\",\n                      children: [cctv.ip, \":\", cctv.status]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 84,\n                      columnNumber: 25\n                    }, this)\n                  }, cctv.ip, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 83,\n                    columnNumber: 23\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 81,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 80,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 13\n          }, this)]\n        }, room.room, true, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 5\n    }, this), webSocketData && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"WebSocket Data: \", JSON.stringify(webSocketData)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 23\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n};\n_s2(App, \"aAgnCjos9JNnWjYK8ytCWsfnLLE=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","App","_s2","_s","$RefreshSig$","apiData","setApiData","webSocketData","setWebSocketData","fetchData","response","get","process","env","REACT_APP_HOST","console","log","data","error","intervalId","setInterval","clearInterval","ws","WebSocket","onmessage","event","JSON","parse","onclose","onopen","readyState","CLOSED","close","children","className","fileName","_jsxFileName","lineNumber","columnNumber","map","room","cctv","index","Fragment","ip","status","stringify","_c","$RefreshReg$"],"sources":["C:/Users/NontakornKhanaphol/Documents/Nontakorn-joe/Dev/ping-cctv-test/frontend/src/pages/Home.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport '../assets/cctv.css';\n\nconst App = () => {\n  const [apiData, setApiData] = useState(null);\n  const [webSocketData, setWebSocketData] = useState(null);\n\n  // Fetch API data\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await axios.get(process.env.REACT_APP_HOST+'/api/ping/check-cctv');\n        console.log(process.env.REACT_APP_HOST,response.data); \n        setApiData(response.data);\n      } catch (error) {\n        console.error('Error fetching data:', error);\n      }\n    };\n\n\n    useEffect(() => {\n      fetchData(); // Initial fetch\n  \n      const intervalId = setInterval(fetchData, 2000); // Refresh every 2 seconds\n  \n      return () => clearInterval(intervalId); // Cleanup interval on unmount\n    }, []);\n\n    fetchData();\n  }, []);\n\n \n  // Connect to WebSocket server\nuseEffect(() => {\n  const ws = new WebSocket('ws://localhost:4000');\n\n  console.log('WebSocket :', ws);\n\n  ws.onmessage = (event) => {\n    const data = JSON.parse(event.data);\n    setWebSocketData(data);\n    // console.log('set :',data)\n  };\n\n  ws.onclose = () => {\n    console.log('WebSocket connection closed');\n  };\n\n  ws.onopen = () => {\n    console.log('WebSocket connection opened');\n  };\n\n  if (ws.readyState === WebSocket.CLOSED) {\n    console.log('WebSocket connection closed before it was established');\n  }\n\n  return () => {\n    ws.close();\n  };\n}, \n\n[]); \n\n  return (\n    <div>\n    {/* <h1>CCTV Status</h1> */}\n    <table className='all'>\n      <thead>\n        <tr>\n         \n        </tr>\n      </thead>\n      <tbody>\n        {apiData && apiData.data.map(room => (\n          <tr key={room.room}>\n            <td>{room.room}</td>\n            <td>\n              <table className='ip'>\n                <tbody>\n                  <tr>\n                    {room.data.map((cctv, index) => (\n                      <React.Fragment key={cctv.ip}>\n                        <td className='status'>{cctv.ip}:{cctv.status}</td>                       \n                      </React.Fragment>\n                    ))}\n                  </tr>\n                </tbody>\n              </table>\n            </td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n    {webSocketData && <p>WebSocket Data: {JSON.stringify(webSocketData)}</p>}\n  </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}