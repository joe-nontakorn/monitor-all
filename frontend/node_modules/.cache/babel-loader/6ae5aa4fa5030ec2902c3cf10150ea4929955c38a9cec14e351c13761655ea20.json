{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\NontakornKhanaphol\\\\Documents\\\\Nontakorn-joe\\\\Dev\\\\ping-cctv-test\\\\frontend\\\\src\\\\pages\\\\Home.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport '../assets/cctv.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [apiData, setApiData] = useState(null);\n  const [webSocketData, setWebSocketData] = useState(null);\n\n  // Fetch API data\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await axios.get(process.env.REACT_APP_HOST + '/api/ping/check-cctv');\n        console.log(process.env.REACT_APP_HOST, response.data);\n        setApiData(response.data);\n      } catch (error) {\n        console.error('Error fetching data:', error);\n      }\n    };\n    fetchData();\n    const intervalId = setInterval(fetchData, 2000); // Refresh every 2 seconds\n\n    return () => clearInterval(intervalId); // Cleanup interval on unmount\n  }, []);\n\n  // Connect to WebSocket server\n  useEffect(() => {\n    const ws = new WebSocket('ws://localhost:4000');\n    console.log('WebSocket :', ws);\n    ws.onmessage = event => {\n      const data = JSON.parse(event.data);\n      setWebSocketData(data);\n      // console.log('set :',data)\n    };\n\n    ws.onclose = () => {\n      console.log('WebSocket connection closed');\n    };\n    ws.onopen = () => {\n      console.log('WebSocket connection opened');\n    };\n    if (ws.readyState === WebSocket.CLOSED) {\n      console.log('WebSocket connection closed before it was established');\n    }\n    return () => {\n      ws.close();\n    };\n  }, []);\n  const getCameraStatusForRoom = roomName => {\n    const room = apiData.data.find(r => r.room === roomName);\n    return room ? room.data : [];\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"all\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: apiData && apiData.data.map(room => /*#__PURE__*/_jsxDEV(\"th\", {\n            children: room.room.substring(0, 3)\n          }, room.room, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 13\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: apiData && apiData.data.map(room => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: getCameraStatusForRoom(room.room).map(camera => /*#__PURE__*/_jsxDEV(\"td\", {\n            className: camera.status === 'online' ? 'online' : 'offline',\n            children: camera.status\n          }, camera.ip, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 19\n          }, this))\n        }, room.room, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 5\n    }, this), webSocketData && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"WebSocket Data: \", JSON.stringify(webSocketData)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 23\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"aAgnCjos9JNnWjYK8ytCWsfnLLE=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","App","_s","apiData","setApiData","webSocketData","setWebSocketData","fetchData","response","get","process","env","REACT_APP_HOST","console","log","data","error","intervalId","setInterval","clearInterval","ws","WebSocket","onmessage","event","JSON","parse","onclose","onopen","readyState","CLOSED","close","getCameraStatusForRoom","roomName","room","find","r","children","className","map","substring","fileName","_jsxFileName","lineNumber","columnNumber","camera","status","ip","stringify","_c","$RefreshReg$"],"sources":["C:/Users/NontakornKhanaphol/Documents/Nontakorn-joe/Dev/ping-cctv-test/frontend/src/pages/Home.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport '../assets/cctv.css';\n\nconst App = () => {\n  const [apiData, setApiData] = useState(null);\n  const [webSocketData, setWebSocketData] = useState(null);\n\n  // Fetch API data\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await axios.get(process.env.REACT_APP_HOST+'/api/ping/check-cctv');\n        console.log(process.env.REACT_APP_HOST,response.data); \n        setApiData(response.data);\n      } catch (error) {\n        console.error('Error fetching data:', error);\n      }\n    };\n\n    fetchData();\n    \n    const intervalId = setInterval(fetchData, 2000); // Refresh every 2 seconds\n\n    return () => clearInterval(intervalId); // Cleanup interval on unmount\n \n  }, []);\n\n \n  // Connect to WebSocket server\nuseEffect(() => {\n  const ws = new WebSocket('ws://localhost:4000');\n\n  console.log('WebSocket :', ws);\n\n  ws.onmessage = (event) => {\n    const data = JSON.parse(event.data);\n    setWebSocketData(data);\n    // console.log('set :',data)\n  };\n\n  ws.onclose = () => {\n    console.log('WebSocket connection closed');\n  };\n\n  ws.onopen = () => {\n    console.log('WebSocket connection opened');\n  };\n\n  if (ws.readyState === WebSocket.CLOSED) {\n    console.log('WebSocket connection closed before it was established');\n  }\n\n  return () => {\n    ws.close();\n  };\n}, \n\n[]); \n\n\nconst getCameraStatusForRoom = (roomName) => {\n  const room = apiData.data.find((r) => r.room === roomName);\n  return room ? room.data : [];\n};\n\n  return (\n    <div>\n    <table className='all'>\n      <thead>\n        <tr>\n          {apiData && apiData.data.map((room) => (\n            <th key={room.room}>{room.room.substring(0, 3)}</th>\n          ))}\n        </tr>\n      </thead>\n      <tbody>\n          {apiData &&\n            apiData.data.map((room) => (\n              <tr key={room.room}>\n                {getCameraStatusForRoom(room.room).map((camera) => (\n                  <td key={camera.ip} className={camera.status === 'online' ? 'online' : 'offline'}>\n                    {camera.status}\n                  </td>\n                ))}\n              </tr>\n            ))}\n        </tbody>\n    </table>\n    {webSocketData && <p>WebSocket Data: {JSON.stringify(webSocketData)}</p>}\n  </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}